mixin loop_while(counter)
	- i = 0;
	while i < counter
		- i++;
		block

mixin icon(name, mod)
	- mod = mod || '';
	svg(class=`icon icon_${name} ${mod}`)
		use(xlink:href=`./assets/images/sprite/sprite.svg#${name}`)

//- mixin picture(data)
//- 	- assetsImage = 'assets/images/';
//- 	- imagesArray = data.img_mob ? [data.img, data.img_mob] : [data.img];
//- 	- dedicatedPaths = imagesArray.map((path) => path.split('.')); // array contains [path, type]
//- 	- typesArray = dedicatedPaths.map((path) => [path.pop()]); // get and remove type from path
//- 	- pathArray = dedicatedPaths.map((path) => assetsImage + path.join('.')); // full paths array

//- 	- is2x = data.is2x ? true : false;
//- 	- media = data.media;
//- 	- alt = data.alt || ' ';
//- 	- loading = data.lazy ? 'lazy' : 'eager';

//- 	picture(class=data.class)
//- 		//- array of types, ex:[[jpg], [png]]
//- 		each type, i in typesArray
//- 			- type.unshift('webp');
//- 			- defaultTypeIndex = 1;

//- 			//- sub array of types, ex:[[jpg], [webp]]
//- 			each subType, j in type
//- 				- mimeType = subType === 'jpg' ? 'jpeg' : subType;
//- 				- isWebp = subType === 'webp' ? 'webp' : '';

//- 				if media
//- 					- mediaAttr = i === 0 ? `(min-width: ${media}px)` : `(max-width: ${media - 1}px)`;

//- 				source(
//- 					media=mediaAttr,
//- 					srcset=`${pathArray[i]}.${isWebp != '' ? isWebp : type[defaultTypeIndex]}${is2x ? `, ${pathArray[i]}@2x.${isWebp != '' ? isWebp : type[defaultTypeIndex]} 2x` : ''}`,
//- 					type=`image/${mimeType}`
//- 				)
//- 		img(
//- 			class=data.img_class,
//- 			src=`${pathArray[0]}.${typesArray[0][defaultTypeIndex]}`,
//- 			alt=alt,
//- 			loading=loading
//- 		)

mixin picture(data)
	- assetsImage = 'assets/images/';
	- imagesArray = data.img_mob ? [data.img, data.img_mob] : [data.img];
	- dedicatedPaths = imagesArray.map((path) => path.split('.')); // array contains [path, type]
	- typesArray = dedicatedPaths.map((path) => [path.pop()]); // get and remove type from path
	- pathArray = dedicatedPaths.map((path) => assetsImage + path.join('.')); // full paths array

	- is2x = data.is2x ? true : false;
	- media = data.media;
	- alt = data.alt || ' ';
	- loading = data.lazy ? 'lazy' : 'eager';

	picture(class=data.class)
		//- array of types, ex:[[jpg], [png]]
		each type, i in typesArray
			- type.unshift('webp');
			- defaultTypeIndex = 1;

			//- sub array of types, ex:[[jpg], [webp]]
			each subType, j in type
				- mimeType = subType === 'jpg' ? 'jpeg' : subType;
				- isWebp = subType === 'webp' ? '.webp' : '';

				if media
					- mediaAttr = i === 0 ? `(min-width: ${media}px)` : `(max-width: ${media - 1}px)`;

				source(
					media=mediaAttr,
					srcset=`${pathArray[i]}.${type[defaultTypeIndex]}${isWebp}${is2x ? `, ${pathArray[i]}@2x.${type[defaultTypeIndex]}${isWebp} 2x` : ''}`,
					type=`image/${mimeType}`
				)
		img(
			class=data.img_class,
			src=`${pathArray[0]}.${typesArray[0][defaultTypeIndex]}`,
			alt=alt,
			loading=loading
		)
